#!/bin/bash
cd "$(git rev-parse --show-toplevel)"
pwd

# ESlint
ESLINT_STAGED_FILES=($(git diff --cached --name-only --diff-filter=ACM | grep ".tsx\{0,1\}$"))

echo "Checking ${#ESLINT_STAGED_FILES[@]} staged files for ESLint Errors..."

if [[ "$ESLINT_STAGED_FILES" != "" ]]; then
    
    # Check for eslint
    ESLINT="client/node_modules/.bin/eslint"
    if [[ ! -x "$ESLINT" ]]; then
        printf "\t\033[41mPlease install ESlint\033[0m (npm install eslint)\n"
        exit 1
    fi
    
    $ESLINT "${ESLINT_STAGED_FILES[@]}" --fix
    
    ESLINT_EXIT="$?"
    
    # Re-add files since they may have been fixed
    git add "${ESLINT_STAGED_FILES[@]}"
    
    if [[ "${ESLINT_EXIT}" == 0 ]]; then
        printf "\n\033[42mESlint checks passed\033[0m\n"
    else
        printf "\n\033[41mCOMMIT FAILED:\033[0m Fix eslint errors and try again\n"
        exit 1
    fi
fi


# Python black
PYTHON_STAGED_FILES=($(git diff --cached --name-only --diff-filter=ACM | grep ".py$"))
echo "Checking ${#PYTHON_STAGED_FILES[@]} staged files for Python Black Errors..."

if [[ "$PYTHON_STAGED_FILES" != "" ]]; then
    # Check for python black
    server/venv/bin/python3 -m pip -q show black
    BLACK_EXISTS="$?"
    
    if [[ "${BLACK_EXISTS}" = 1 ]]; then
        printf "\t\033[41mPlease install python black in venv\033[0m (pip install black)\n"
        exit 1
    fi
    
    server/venv/bin/python3 -m black "${PYTHON_STAGED_FILES[@]}" --config server/pyproject.toml
    
    BLACK_EXIT="$?"
    
    # Re-add files since they may have been fixed
    git add "${PYTHON_STAGED_FILES[@]}"
    
    if [[ "${BLACK_EXIT}" = 0 ]]; then
        printf "\n\033[42mPython Black checks passed\033[0m\n"
    else
        printf "\n\033[41mCOMMIT FAILED:\033[0m Fix python black errors and try again\n"
        exit 1
    fi
fi

exit $?
